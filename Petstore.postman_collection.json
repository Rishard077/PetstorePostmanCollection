{
	"info": {
		"_postman_id": "36ade8bc-8565-45b9-b02a-58878d91261b",
		"name": "Petstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19315736",
		"_collection_link": "https://cloudy-trinity-662918.postman.co/workspace/personal~ec6da5b2-b557-42a8-84cb-cc044b6a2620/collection/19315736-36ade8bc-8565-45b9-b02a-58878d91261b?action=share&creator=19315736&source=collection_link"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Add new Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var petid = pm.response.json().id\r",
									"pm.environment.set(\"petId\", petid);\r",
									"\r",
									"var petname = pm.response.json().name\r",
									"pm.environment.set(\"petName\", petname);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomFourDigitNumber = Math.floor(1000 + Math.random() * 9000);\r",
									"\r",
									"pm.environment.set(\"petId\", randomFourDigitNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{petId}},\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"name\": \"My Pet 1\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/pet",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload Pet Image",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/mrishad/Downloads/File (119).jpg"
								},
								{
									"key": "additionalMetadata",
									"value": "abc",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseurl}}/pet/{{petId}}/uploadImage",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"pet",
								"{{petId}}",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var petname = pm.response.json().name\r",
									"pm.environment.set(\"petName\", petname);\r",
									"\r",
									"var expectedStatus = pm.environment.get(\"status\");\r",
									"pm.test(\"Status is set to :\"+expectedStatus,function () { \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(expectedStatus);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{petId}},\r\n        \"category\": {\r\n            \"id\": 102,\r\n            \"name\": \"Husky\"\r\n        },\r\n        \"name\": \"Petname 2\",\r\n        \"photoUrls\": [\r\n            \"ghi.com\",\r\n            \"xyz.com\",\r\n            \"xyz.com\"\r\n        ],\r\n        \"tags\": [\r\n            {\r\n                \"id\": 20,\r\n                \"name\": \"Hen\"\r\n            },\r\n            {\r\n                \"id\": 20,\r\n                \"name\": \"Dog\"\r\n            }\r\n        ],\r\n  \"status\": \"{{status}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/pet",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PET",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var newPetName = pm.environment.get(\"petName\")\r",
									"pm.test(\"New pet Name :\"+newPetName,function () { \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(newPetName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/pet/{{petId}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/pet/{{petId}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PET Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.response.to.have.status(200);\r",
									"});\r",
									"var expectedStatus = pm.environment.get(\"status\");\r",
									"var responseJson = pm.response.json();\r",
									"var pendingCount = 0;\r",
									"for (var i = 0; i < responseJson.length; i++) {\r",
									"    if (responseJson[i].status === expectedStatus) {\r",
									"        pendingCount++;\r",
									"    }\r",
									"}\r",
									"pm.test(\"At least one entry has status \"+expectedStatus, function () {\r",
									"    pm.expect(pendingCount).to.be.greaterThan(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/pet/findByStatus?status={{status}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Place and order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var random = Math.floor(1 + Math.random() * 9);\r",
									"\r",
									"pm.environment.set(\"orderAmount\", random);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var expectPetId = pm.environment.get(\"petId\");\r",
									"pm.test(\"pet ID :\"+expectPetId,function () { \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.petId).to.eql(expectPetId);\r",
									"});\r",
									"\r",
									"var orderid = pm.response.json().id\r",
									"pm.environment.set(\"orderId\", orderid);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"petId\": {{petId}},\r\n  \"quantity\": {{orderAmount}},\r\n  \"shipDate\": \"{{$isoTimestamp}}\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/store/order",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var expectPetId = pm.environment.get(\"petId\");\r",
									"pm.test(\"pet ID :\"+expectPetId,function () { \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.petId).to.eql(expectPetId);\r",
									"});\r",
									"\r",
									"var expectedAmount = pm.environment.get(\"orderAmount\");\r",
									"pm.test(\"pet ID :\"+expectedAmount,function () { \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.quantity).to.eql(expectedAmount);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/store/order/{{orderId}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete purchase order by order ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/store/order/{{orderId}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Return Pet inventories by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/store/inventory",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var randomUsername = \"user\" + Math.floor(Math.random() * 1000);\r",
									"var randomFirstName = \"firstname\" + Math.floor(Math.random() * 1000);\r",
									"var randomLastName = \"Lastname\" + Math.floor(Math.random() * 1000);\r",
									"var randomEmail = \"email\" + Math.floor(Math.random() * 1000) + \"@email.com\";\r",
									"var randomPassword = \"string\" + Math.floor(Math.random() * 100);\r",
									"var randomPhone = \"123456\" + Math.floor(Math.random() * 100);\r",
									"\r",
									"// Set environment variables\r",
									"\r",
									"pm.environment.set(\"username\", randomUsername);\r",
									"pm.environment.set(\"firstName\", randomFirstName);\r",
									"pm.environment.set(\"lastName\", randomLastName);\r",
									"pm.environment.set(\"email\", randomEmail);\r",
									"pm.environment.set(\"randomPassword\", randomPassword);\r",
									"pm.environment.set(\"phone\", randomPhone);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var userid = pm.response.json().message\r",
									"pm.environment.set(\"userid\", userid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"{{username}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{randomPassword}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var expectedFirstName = pm.environment.get(\"firstName\");\r",
									"pm.test(\"Status is set to :\"+expectedFirstName,function () { \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(expectedFirstName);\r",
									"});\r",
									"\r",
									"var expectedUserid = parseInt(pm.environment.get(\"userid\"),10)\r",
									"pm.test(\"user id :\"+expectedUserid,function () { \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(expectedUserid);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user/{{username}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"updateduser\",\r\n  \"firstName\": \"updatedFirstname\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/{{username}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create users with array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 1,\r\n    \"username\": \"user1\",\r\n    \"firstName\": \"first1\",\r\n    \"lastName\": \"last1\",\r\n    \"email\": \"email1@email.com\",\r\n    \"password\": \"password1\",\r\n    \"phone\": \"123456789\",\r\n    \"userStatus\": 0\r\n  },\r\n  {\r\n    \"id\": 1,\r\n    \"username\": \"user2\",\r\n    \"firstName\": \"first2\",\r\n    \"lastName\": \"last2\",\r\n    \"email\": \"email2@email.com\",\r\n    \"password\": \"password2\",\r\n    \"phone\": \"123456789\",\r\n    \"userStatus\": 0\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/createWithArray",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create users with List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 0,\r\n    \"username\": \"string\",\r\n    \"firstName\": \"string\",\r\n    \"lastName\": \"string\",\r\n    \"email\": \"string\",\r\n    \"password\": \"string\",\r\n    \"phone\": \"string\",\r\n    \"userStatus\": 0\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/createWithList",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Users",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user/{{username}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Use Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/login?username={{username}}&password={{randomPassword}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{randomPassword}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Use Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/logout",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"logout"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}